name: Release
on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - run: go test ./...
  
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential sqlite3 libsqlite3-dev
      - name: Setup CGO
        run: |
          echo "CGO_ENABLED=1" >> $GITHUB_ENV
          echo "GODEBUG=netdns=go" >> $GITHUB_ENV
          echo "CGO_CFLAGS=-I/usr/include" >> $GITHUB_ENV
          echo "CGO_LDFLAGS=-lsqlite3" >> $GITHUB_ENV
      - name: Install Go dependencies
        run: |
          go mod tidy
          go get github.com/akamensky/argparse
          go get github.com/mattn/go-sqlite3
        
      - name: Build
        env:
          CGO_ENABLED: 1
        run: |
          go build -ldflags '-extldflags "-static"' -tags osusergo,netgo,cgo -v ./...

  release:
    needs: [test, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Setup CGO
        run: echo "CGO_ENABLED=1" >> $GITHUB_ENV

      - name: Install SQLite dependencies
        run: sudo apt-get update && sudo apt-get install -y sqlite3 libsqlite3-dev

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          CGO_ENABLED: 1
          GO111MODULE: auto
